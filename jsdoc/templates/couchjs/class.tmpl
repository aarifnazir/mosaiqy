	{!
	var classType = "";

	if (data.isBuiltin()) {
	classType += "Built-In ";
	}

	if (data.isNamespace) {
	if (data.is('FUNCTION')) {
	classType += "Function ";
	}
	classType += "Namespace ";
	}
	else {
	classType += "Class ";
	}
	!}

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    {! Link.base = "../"; /* all generated links will be relative to this */ !}
    <title>JsDoc Reference - {+data.alias+}</title>

    <style type="text/css">
      {+include("static/default.css")+}
    </style>
  </head>

  <body>

    <div id="nav">

      <div id="index">
        <!-- begin publish.classesIndex -->
        {+publish.classesIndex+}
        <!-- end publish.classesIndex -->
      </div>

      <!-- ============================== properties summary ===================== -->
      <if test="data.properties.length">
	{! var ownProperties = data.properties.filter(function($){return $.memberOf == data.alias && !$.isNamespace}).sort(makeSortby("name")); !}
	<if test="ownProperties.length">
	  <table class="summaryTable" cellspacing="0" summary="A summary of the fields documented in the class {+data.alias+}.">
	    <tbody>
	      <for each="member" in="ownProperties">
		<tr>
		  <td class="attributes">{!
		    if (member.isPrivate) output += "&lt;private&gt; ";
		    if (member.isInner) output += "&lt;inner&gt; ";
		    if (member.isStatic) output += "&lt;static&gt; ";
		    if (member.isConstant) output += "&lt;constant&gt; ";
		    !}&nbsp;</td>
		  <td class="nameDescription">
		    <div class="fixedFont">
		      <if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>
		    </div>
		    <div class="description"></div>
		  </td>
		</tr>
	      </for>
	    </tbody>
	  </table>
	</if>
      </if>

      <!-- ============================== methods summary ======================== -->
      <if test="data.methods.length">
        <h2>Methods</h2>
	{! var ownMethods = data.methods.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name")); !}
	<if test="ownMethods.length">
          <ul>
	    <for each="member" in="ownMethods">
	      <li>
                {+new Link().toSymbol(member.alias).withText(member.name.replace(/\^\d+$/, ''))+}
	      </li>
	    </for>
          </ul>
	</if>
      </if>
      <!-- ============================== events summary ======================== -->
      <if test="data.events.length">
	{! var ownEvents = data.events.filter(function($){return $.memberOf == data.alias  && !$.isNamespace}).sort(makeSortby("name")); !}
	<if test="ownEvents.length">
	  <table class="summaryTable" cellspacing="0" summary="A summary of the events documented in the class {+data.alias+}.">
	    <caption>Event Summary</caption>
	    <thead>
	      <tr>
		<th scope="col">Event Attributes</th>
		<th scope="col">Event Name and Description</th>
	      </tr>
	    </thead>
	    <tbody>
	      <for each="member" in="ownEvents">
		<tr>
		  <td class="attributes">{!
		    if (member.isPrivate) output += "&lt;private&gt; ";
		    if (member.isInner) output += "&lt;inner&gt; ";
		    if (member.isStatic) output += "&lt;static&gt; ";
		    !}&nbsp;</td>
		  <td class="nameDescription">
		    <div class="fixedFont"><if test="member.isStatic && member.memberOf != '_global_'">{+member.memberOf+}.</if><b>{+new Link().toSymbol(member.alias).withText(member.name)+}</b>{+makeSignature(member.params)+}
		    </div>
		    <div class="description">{+resolveLinks(summarize(member.desc))+}</div>
		  </td>
		</tr>
	      </for>
	    </tbody>
	  </table>
	</if>
      </if>

      <!-- ============================== constructor details ==================== -->
      </div>
      <div id="content">

      <!-- ============================== class title ============================ -->
      <h1 class="classTitle">{+data.alias+}</h1>

      <!-- ============================== class summary ========================== -->
      <div class="description classheader">
	<if test="data.augments.length"><br />Extends
	  {+
	  data.augments.sort().map(
	  function($) { return new Link().toSymbol($); }
	  ).join(", ")
	  +}.<br />
	</if>

	{+resolveLinks(data.classDesc)+}
      </div>

      <!-- ============================== field details ========================== -->
      <if test="defined(ownProperties) && ownProperties.length">
	<div class="sectionTitle">
	  Field Detail
	</div>
	<for each="member" in="ownProperties">
	  <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
	  <div class="fixedFont">{!
	    if (member.isPrivate) output += "&lt;private&gt; ";
	    if (member.isInner) output += "&lt;inner&gt; ";
	    if (member.isStatic) output += "&lt;static&gt; ";
	    if (member.isConstant) output += "&lt;constant&gt; ";
	    !}

	    <if test="member.type"><span class="light">{{+new Link().toSymbol(member.type)+}}</span></if>
	    <if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>

	  </div>
	  <div class="description">
	    {+resolveLinks(member.desc)+}
	    <if test="member.srcFile != data.srcFile">
	      <br />
	      <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
	    </if>
	    <if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
	  </div>

	  <if test="member.example.length">
	    <for each="example" in="member.example">
	      <pre class="code">{+example+}</pre>
	    </for>
	  </if>

	  <if test="member.deprecated">
	    <dl class="detailList">
	      <dt class="heading">Deprecated:</dt>
	      <dt>
		{+ resolveLinks(member.deprecated) +}
	      </dt>
	    </dl>
	  </if>
	  <if test="member.since">
	    <dl class="detailList">
	      <dt class="heading">Since:</dt>
	      <dd>{+ member.since +}</dd>
	    </dl>
	  </if>
	  <if test="member.see.length">
	    <dl class="detailList see">
	      <for each="item" in="member.see">
		<dd>{+ new Link().toSymbol(item) +}</dd>
	      </for>
	    </dl>
	  </if>
	  <if test="member.defaultValue">
	    <dl class="detailList">
	      <dt class="heading">Default Value:</dt>
	      <dd>
		{+resolveLinks(member.defaultValue)+}
	      </dd>
	    </dl>
	  </if>

	  <if test="!$member_last"><hr /></if>
	</for>
      </if>

      <!-- ============================== method details ========================= -->
      <if test="defined(ownMethods) && ownMethods.length">
        <h1 id="methods">Methods</h1>
	<for each="member" in="ownMethods">
          <div class="member">
	  <a name="{+Link.symbolNameToLinkName(member)+}"> </a>
	  <div class="fixedFont">

	    <if test="member.type">
              <span class="light">{{+new Link().toSymbol(member.type)+}}</span>
            </if>
            <span class="method">
            <if test="member.isStatic && member.memberOf != '_global_'">
              {+member.memberOf+}.</if>{+member.name.replace(/\^\d+$/, '')+}{+makeSignature(member.params)+}
            </span>
	  </div>
	  <div class="description">
	    {+resolveLinks(member.desc)+}
	    <if test="member.srcFile != data.srcFile">
	      <br />
	      <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
	    </if>
	    <if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
	  </div>

	  <if test="member.example.length">
	    <for each="example" in="member.example">
	      <pre class="code">{+example+}</pre>
	    </for>
	  </if>

	  <if test="member.params.length">
            <div class="parameters">
            <h2>Parameters:</h2>
            <table cellspacing="0">
	      <for each="item" in="member.params">
                <tr>
                  <td class="type">
		    {+((item.type)?"{"+(new Link().toSymbol(item.type))+"} " : "")+}
                  </td>
                  <td class="name"><b>{+item.name+}</b></td>
		  <td><if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
		  </td>
		  <td class="param_description">{+resolveLinks(item.desc)+}</td>
                </section>
	      </for>
	    </table>
            </div>
	  </if>
	  <if test="member.deprecated">
	    <dl class="detailList">
	      <dt class="heading">Deprecated:</dt>
	      <dt>
		{+ resolveLinks(member.deprecated) +}
	      </dt>
	    </dl>
	  </if>
	  <if test="member.since">
	    <dl class="detailList">
	      <dt class="heading">Since:</dt>
	      <dd>{+ member.since +}</dd>
	    </dl>
	  </dl>
	</if>
	<if test="member.exceptions.length">
	  <dl class="detailList">
	    <dt class="heading">Throws:</dt>
	    <for each="item" in="member.exceptions">
	      <dt>
		{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
	      </dt>
	      <dd>{+resolveLinks(item.desc)+}</dd>
	    </for>
	  </dl>
	</if>
	<if test="member.returns.length">
	  <dl class="detailList">
	    <dt class="heading">Returns:</dt>
	    <for each="item" in="member.returns">
	      <dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
	    </for>
	  </dl>
	</if>
	<if test="member.requires.length">
	  <dl class="detailList">
	    <dt class="heading">Requires:</dt>
	    <for each="item" in="member.requires">
	      <dd>{+ resolveLinks(item) +}</dd>
	    </for>
	  </dl>
	</if>
	<if test="member.see.length ">
	  <dl class="detailList see">
	    <for each="item" in="member.see">
	      <dd>{+ new Link().toSymbol(item) +}</dd>
	    </for>
	  </dl>
	</if>

	<if test="!$member_last"><hr /></if>
        </div>
      </for>

    </if>

    <!-- ============================== event details ========================= -->
    <if test="defined(ownEvents) && ownEvents.length">
      <div class="sectionTitle">
	Event Detail
      </div>
      <for each="member" in="ownEvents">
	<a name="{+Link.symbolNameToLinkName(member)+}"> </a>
	<div class="fixedFont">{!
	  if (member.isPrivate) output += "&lt;private&gt; ";
	  if (member.isInner) output += "&lt;inner&gt; ";
	  if (member.isStatic) output += "&lt;static&gt; ";
	  !}

	  <if test="member.type"><span class="light">{{+new Link().toSymbol(member.type)+}}</span></if>
	  <if test="member.isStatic && member.memberOf != '_global_'"><span class="light">{+member.memberOf+}.</span></if><b>{+member.name+}</b>{+makeSignature(member.params)+}

	</div>
	<div class="description">
	  {+resolveLinks(member.desc)+}
	  <if test="member.srcFile != data.srcFile">
	    <br />
	    <i>Defined in: </i> {+new Link().toSrc(member.srcFile)+}.
	  </if>
	  <if test="member.author"><br /><i>Author: </i>{+member.author+}.</if>
	</div>

	<if test="member.example.length">
	  <for each="example" in="member.example">
	    <pre class="code">{+example+}</pre>
	  </for>
	</if>

	<if test="member.params.length">
	  <dl class="detailList parameters">
	    <for each="item" in="member.params">
	      <dt>
		{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}<b>{+item.name+}</b>
		<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
	      </dt>
	      <dd>{+ resolveLinks(item.desc) +}</dd>
	    </for>
	  </dl>
	</if>
	<if test="member.deprecated">
	  <dl class="detailList">
	    <dt class="heading">Deprecated:</dt>
	    <dt>
	      {+ resolveLinks(member.deprecated) +}
	    </dt>
	  </dl>
	</if>
	<if test="member.since">
	  <dl class="detailList">
	    <dt class="heading">Since:</dt>
	    <dd>{+ member.since +}</dd>
	  </dl>
	</dl>
      </if>
      <if test="member.exceptions.length">
	<dl class="detailList">
	  <dt class="heading">Throws:</dt>
	  <for each="item" in="member.exceptions">
	    <dt>
	      {+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
	    </dt>
	    <dd>{+ resolveLinks(item.desc) +}</dd>
	  </for>
	</dl>
      </if>
      <if test="member.returns.length">
	<dl class="detailList">
	  <dt class="heading">Returns:</dt>
	  <for each="item" in="member.returns">
	    <dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
	  </for>
	</dl>
      </if>
      <if test="member.requires.length">
	<dl class="detailList">
	  <dt class="heading">Requires:</dt>
	  <for each="item" in="member.requires">
	    <dd>{+ resolveLinks(item) +}</dd>
	  </for>
	</dl>
      </if>
      <if test="member.see.length">
	<dl class="detailList">
	  <dt class="heading">See:</dt>
	  <for each="item" in="member.see">
	    <dd>{+ new Link().toSymbol(item) +}</dd>
	  </for>
	</dl>
      </if>

      <if test="!$member_last"><hr /></if>
    </for>
  </if>

  </div>
</div>

</body>
</html>
